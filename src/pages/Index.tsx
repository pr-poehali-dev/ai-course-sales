import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';
import { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [selectedCourse, setSelectedCourse] = useState<any>(null);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [levelFilter, setLevelFilter] = useState<string>('–í—Å–µ');
  const [visibleSections, setVisibleSections] = useState<Set<string>>(new Set());

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setVisibleSections((prev) => new Set([...prev, entry.target.id]));
          }
        });
      },
      { threshold: 0.1 }
    );

    const sections = document.querySelectorAll('section[id]');
    sections.forEach((section) => observer.observe(section));

    return () => {
      sections.forEach((section) => observer.unobserve(section));
    };
  }, []);

  const courses = [
    {
      id: 1,
      title: '–û—Å–Ω–æ–≤—ã –ò–ò –∏ Machine Learning',
      description: '–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —Å –Ω—É–ª—è',
      duration: '8 –Ω–µ–¥–µ–ª—å',
      level: '–ù–∞—á–∞–ª—å–Ω—ã–π',
      price: '24 900 ‚ÇΩ',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/f63c1d09-8760-44d5-b9c2-7726f67faf29.jpg',
      demoUrl: 'https://youtube.com/watch?v=demo1'
    },
    {
      id: 2,
      title: 'ChatGPT –∏ Prompt Engineering',
      description: '–ù–∞—É—á–∏—Ç–µ—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –∫–∞–∫ –ø—Ä–æ—Ñ–∏',
      duration: '6 –Ω–µ–¥–µ–ª—å',
      level: '–°—Ä–µ–¥–Ω–∏–π',
      price: '19 900 ‚ÇΩ',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/f63c1d09-8760-44d5-b9c2-7726f67faf29.jpg',
      demoUrl: 'https://youtube.com/watch?v=demo2'
    },
    {
      id: 3,
      title: 'Deep Learning & –ù–µ–π—Ä–æ—Å–µ—Ç–∏',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏',
      duration: '12 –Ω–µ–¥–µ–ª—å',
      level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
      price: '39 900 ‚ÇΩ',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/f63c1d09-8760-44d5-b9c2-7726f67faf29.jpg',
      demoUrl: 'https://youtube.com/watch?v=demo3'
    }
  ];

  const filteredCourses = levelFilter === '–í—Å–µ' 
    ? courses 
    : courses.filter(course => course.level === levelFilter);

  const NavLinks = ({ onClick }: { onClick?: () => void }) => (
    <>
      <a href="#courses" className="hover:text-primary transition-colors" onClick={onClick}>–ö—É—Ä—Å—ã</a>
      <a href="#teachers" className="hover:text-primary transition-colors" onClick={onClick}>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</a>
      <a href="#reviews" className="hover:text-primary transition-colors" onClick={onClick}>–û—Ç–∑—ã–≤—ã</a>
      <a href="#pricing" className="hover:text-primary transition-colors" onClick={onClick}>–¢–∞—Ä–∏—Ñ—ã</a>
      <a href="#faq" className="hover:text-primary transition-colors" onClick={onClick}>FAQ</a>
    </>
  );

  const teachers = [
    {
      name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      role: 'AI Researcher',
      experience: '10+ –ª–µ—Ç –≤ –ò–ò',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/25cbc228-e41c-46b6-b4e6-749d4777256d.jpg'
    },
    {
      name: '–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤',
      role: 'ML Engineer',
      experience: '8+ –ª–µ—Ç –≤ ML',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/25cbc228-e41c-46b6-b4e6-749d4777256d.jpg'
    },
    {
      name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
      role: 'Data Scientist',
      experience: '12+ –ª–µ—Ç –≤ DS',
      image: 'https://cdn.poehali.dev/projects/70ee3644-6a3e-4e38-ae6b-05c3a0e0ac30/files/25cbc228-e41c-46b6-b4e6-749d4777256d.jpg'
    }
  ];

  const reviews = [
    {
      name: '–ê–ª–µ–∫—Å–µ–π –ö.',
      text: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –∫—É—Ä—Å! –ó–∞ 2 –º–µ—Å—è—Ü–∞ –Ω–∞—É—á–∏–ª—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –∏ –ø–æ–ª—É—á–∏–ª –ø–æ–≤—ã—à–µ–Ω–∏–µ',
      rating: 5,
      course: 'ChatGPT Pro'
    },
    {
      name: '–ï–ª–µ–Ω–∞ –ú.',
      text: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–µ —ç–∫—Å–ø–µ—Ä—Ç—ã. –û–±—ä—è—Å–Ω—è—é—Ç —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º',
      rating: 5,
      course: '–û—Å–Ω–æ–≤—ã –ò–ò'
    },
    {
      name: '–°–µ—Ä–≥–µ–π –ë.',
      text: '–õ—É—á—à–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ! –£–∂–µ –∑–∞–ø—É—Å—Ç–∏–ª —Å–≤–æ–π –ò–ò-–ø—Ä–æ–µ–∫—Ç',
      rating: 5,
      course: 'Deep Learning'
    }
  ];

  const pricing = [
    {
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: '9 900 ‚ÇΩ',
      features: ['1 –∫—É—Ä—Å', '–î–æ—Å—Ç—É–ø –Ω–∞ 3 –º–µ—Å—è—Ü–∞', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', '–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏']
    },
    {
      name: '–ü—Ä–æ—Ñ–∏',
      price: '24 900 ‚ÇΩ',
      features: ['3 –∫—É—Ä—Å–∞', '–î–æ—Å—Ç—É–ø –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', '–õ–∏—á–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏–π']
    },
    {
      name: '–≠–∫—Å–ø–µ—Ä—Ç',
      price: '49 900 ‚ÇΩ',
      features: ['–í—Å–µ –∫—É—Ä—Å—ã', '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', '–õ–∏—á–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫', '–ö–∞—Ä—å–µ—Ä–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–ü–æ–º–æ—â—å —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏']
    }
  ];

  const faq = [
    {
      question: '–ù—É–∂–Ω—ã –ª–∏ –∑–Ω–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?',
      answer: '–î–ª—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—ã—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ú—ã –æ–±—É—á–∞–µ–º —Å –Ω—É–ª—è.'
    },
    {
      question: '–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–±—É—á–µ–Ω–∏–µ?',
      answer: '–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ + –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è + –∂–∏–≤—ã–µ –≤–µ–±–∏–Ω–∞—Ä—ã —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é.'
    },
    {
      question: '–í—ã–¥–∞—ë—Ç–µ –ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç?',
      answer: '–î–∞, –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.'
    },
    {
      question: '–ú–æ–∂–Ω–æ –ª–∏ —É—á–∏—Ç—å—Å—è –≤ —Å–≤–æ—ë–º —Ç–µ–º–ø–µ?',
      answer: '–ö–æ–Ω–µ—á–Ω–æ! –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã 24/7, —É—á–∏—Ç–µ—Å—å –∫–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ.'
    }
  ];

  return (
    <div className="min-h-screen bg-background">
      <div className="fixed inset-0 grid-pattern pointer-events-none opacity-30" />
      
      <nav className="sticky top-0 z-50 border-b border-border/40 backdrop-blur-xl bg-background/80">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <h1 className="text-2xl font-bold neon-text">AI ACADEMY</h1>
          <div className="hidden md:flex items-center gap-6">
            <NavLinks />
            <Button className="neon-glow">–í–æ–π—Ç–∏</Button>
          </div>
          <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>
            <SheetTrigger asChild className="md:hidden">
              <Button variant="ghost" size="icon">
                <Icon name="Menu" size={24} />
              </Button>
            </SheetTrigger>
            <SheetContent side="right" className="bg-background/95 backdrop-blur-xl border-primary/20">
              <div className="flex flex-col gap-6 mt-8">
                <NavLinks onClick={() => setMobileMenuOpen(false)} />
                <Button className="neon-glow w-full">–í–æ–π—Ç–∏</Button>
              </div>
            </SheetContent>
          </Sheet>
        </div>
      </nav>

      <section className="relative py-32 overflow-hidden">
        <div className="container mx-auto px-4 text-center relative z-10">
          <div className="animate-fade-in">
            <Badge className="mb-6 bg-primary/20 text-primary border-primary/50">üöÄ –ù–æ–≤–∞—è —ç—Ä–∞ –æ–±—É—á–µ–Ω–∏—è</Badge>
            <h1 className="text-5xl md:text-7xl font-bold mb-6 neon-text">
              –û—Å–≤–æ–π—Ç–µ –ò–ò<br />
              <span className="text-primary">–ò–∑–º–µ–Ω–∏—Ç–µ –±—É–¥—É—â–µ–µ</span>
            </h1>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto mb-8">
              –ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–º–µ–Ω—è—Ç –ª—é–¥–µ–π –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π. 
              –ß–µ–º —Ä–∞–Ω—å—à–µ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –ò–ò, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç–µ—Å—å –∫ –±—É–¥—É—â–µ–º—É.
            </p>
            <div className="flex gap-4 justify-center">
              <Button size="lg" className="neon-glow text-lg px-8">
                –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                <Icon name="ArrowRight" className="ml-2" size={20} />
              </Button>
              <Button size="lg" variant="outline" className="border-primary/50 text-lg px-8">
                –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ
                <Icon name="Play" className="ml-2" size={20} />
              </Button>
            </div>
          </div>
        </div>
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-primary/10 rounded-full blur-3xl animate-pulse-glow" />
      </section>

      <section id="courses" className={`py-20 transition-all duration-700 ${visibleSections.has('courses') ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <Badge className="mb-4 bg-secondary/20 text-secondary border-secondary/50">–ù–∞—à–∏ –∫—É—Ä—Å—ã</Badge>
            <h2 className="text-4xl font-bold mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å</h2>
            <p className="text-muted-foreground">–û—Ç –Ω–æ–≤–∏—á–∫–∞ –¥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞ –ò–ò</p>
          </div>
          <div className="flex justify-center mb-8">
            <Tabs value={levelFilter} onValueChange={setLevelFilter} className="w-auto">
              <TabsList className="bg-card/50 border border-primary/20">
                <TabsTrigger value="–í—Å–µ" className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground">–í—Å–µ –∫—É—Ä—Å—ã</TabsTrigger>
                <TabsTrigger value="–ù–∞—á–∞–ª—å–Ω—ã–π" className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground">–ù–∞—á–∞–ª—å–Ω—ã–π</TabsTrigger>
                <TabsTrigger value="–°—Ä–µ–¥–Ω–∏–π" className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground">–°—Ä–µ–¥–Ω–∏–π</TabsTrigger>
                <TabsTrigger value="–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π" className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π</TabsTrigger>
              </TabsList>
            </Tabs>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {filteredCourses.map((course) => (
              <Card key={course.id} className="group hover:border-primary/50 transition-all duration-300 bg-card/50 backdrop-blur overflow-hidden">
                <div className="relative overflow-hidden">
                  <img 
                    src={course.image} 
                    alt={course.title}
                    className="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-300"
                  />
                  <div className="absolute top-4 right-4">
                    <Badge className="bg-accent/90 text-accent-foreground">{course.level}</Badge>
                  </div>
                </div>
                <CardHeader>
                  <CardTitle className="text-xl">{course.title}</CardTitle>
                  <CardDescription>{course.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center gap-4 text-sm text-muted-foreground mb-4">
                    <div className="flex items-center gap-1">
                      <Icon name="Clock" size={16} />
                      {course.duration}
                    </div>
                    <div className="flex items-center gap-1">
                      <Icon name="Award" size={16} />
                      –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
                    </div>
                  </div>
                  <div className="text-2xl font-bold text-primary">{course.price}</div>
                </CardContent>
                <CardFooter className="flex gap-2">
                  <Dialog>
                    <DialogTrigger asChild>
                      <Button variant="outline" className="flex-1" onClick={() => setSelectedCourse(course)}>
                        <Icon name="Play" className="mr-2" size={16} />
                        –î–µ–º–æ-—É—Ä–æ–∫
                      </Button>
                    </DialogTrigger>
                    <DialogContent className="max-w-3xl">
                      <DialogHeader>
                        <DialogTitle>{course.title}</DialogTitle>
                        <DialogDescription>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–µ–º–æ-—É—Ä–æ–∫ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π</DialogDescription>
                      </DialogHeader>
                      <div className="aspect-video bg-muted rounded-lg flex items-center justify-center">
                        <div className="text-center">
                          <Icon name="Play" size={64} className="mx-auto mb-4 text-primary" />
                          <p className="text-muted-foreground">–í–∏–¥–µ–æ –¥–µ–º–æ-—É—Ä–æ–∫–∞</p>
                        </div>
                      </div>
                    </DialogContent>
                  </Dialog>
                  <Button className="flex-1 neon-glow">
                    –ö—É–ø–∏—Ç—å –∫—É—Ä—Å
                  </Button>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="teachers" className={`py-20 bg-card/30 transition-all duration-700 ${visibleSections.has('teachers') ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <Badge className="mb-4 bg-accent/20 text-accent border-accent/50">–≠–∫—Å–ø–µ—Ä—Ç—ã</Badge>
            <h2 className="text-4xl font-bold mb-4">–ù–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</h2>
            <p className="text-muted-foreground">–£—á–∏—Ç–µ—Å—å —É –ª—É—á—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {teachers.map((teacher, idx) => (
              <Card key={idx} className="text-center hover:border-primary/50 transition-all bg-card/50 backdrop-blur">
                <CardHeader>
                  <div className="w-32 h-32 mx-auto mb-4 rounded-full overflow-hidden border-4 border-primary/30">
                    <img src={teacher.image} alt={teacher.name} className="w-full h-full object-cover" />
                  </div>
                  <CardTitle>{teacher.name}</CardTitle>
                  <CardDescription className="text-primary">{teacher.role}</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground">{teacher.experience}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="reviews" className={`py-20 transition-all duration-700 ${visibleSections.has('reviews') ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <Badge className="mb-4 bg-primary/20 text-primary border-primary/50">–û—Ç–∑—ã–≤—ã</Badge>
            <h2 className="text-4xl font-bold mb-4">–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞</h2>
            <p className="text-muted-foreground">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {reviews.map((review, idx) => (
              <Card key={idx} className="hover:border-secondary/50 transition-all bg-card/50 backdrop-blur">
                <CardHeader>
                  <div className="flex items-center gap-1 mb-2">
                    {[...Array(review.rating)].map((_, i) => (
                      <Icon key={i} name="Star" size={16} className="text-yellow-500 fill-yellow-500" />
                    ))}
                  </div>
                  <CardTitle className="text-lg">{review.name}</CardTitle>
                  <CardDescription>{review.course}</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground italic">"{review.text}"</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="pricing" className={`py-20 bg-card/30 transition-all duration-700 ${visibleSections.has('pricing') ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <Badge className="mb-4 bg-secondary/20 text-secondary border-secondary/50">–¢–∞—Ä–∏—Ñ—ã</Badge>
            <h2 className="text-4xl font-bold mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–ª–∞–Ω</h2>
            <p className="text-muted-foreground">–ì–∏–±–∫–∏–µ —Ü–µ–Ω—ã –¥–ª—è –ª—é–±–æ–≥–æ –±—é–¥–∂–µ—Ç–∞</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8 max-w-5xl mx-auto">
            {pricing.map((plan, idx) => (
              <Card key={idx} className={`${idx === 1 ? 'border-primary neon-glow scale-105' : ''} hover:border-primary/50 transition-all bg-card/50 backdrop-blur`}>
                <CardHeader>
                  <CardTitle className="text-2xl">{plan.name}</CardTitle>
                  <div className="text-4xl font-bold text-primary mt-4">{plan.price}</div>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3">
                    {plan.features.map((feature, i) => (
                      <li key={i} className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-primary" />
                        {feature}
                      </li>
                    ))}
                  </ul>
                </CardContent>
                <CardFooter>
                  <Button className="w-full" variant={idx === 1 ? 'default' : 'outline'}>
                    –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω
                  </Button>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="faq" className={`py-20 transition-all duration-700 ${visibleSections.has('faq') ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
        <div className="container mx-auto px-4 max-w-3xl">
          <div className="text-center mb-12">
            <Badge className="mb-4 bg-accent/20 text-accent border-accent/50">FAQ</Badge>
            <h2 className="text-4xl font-bold mb-4">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
            <p className="text-muted-foreground">–í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º</p>
          </div>
          <Accordion type="single" collapsible className="space-y-4">
            {faq.map((item, idx) => (
              <AccordionItem key={idx} value={`item-${idx}`} className="border border-border/50 rounded-lg px-6 bg-card/50 backdrop-blur">
                <AccordionTrigger className="text-left hover:text-primary">
                  {item.question}
                </AccordionTrigger>
                <AccordionContent className="text-muted-foreground">
                  {item.answer}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>

      <footer className="border-t border-border/40 py-12 bg-card/30">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <h3 className="font-bold text-xl mb-4 neon-text">AI ACADEMY</h3>
              <p className="text-muted-foreground">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è</p>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ö—É—Ä—Å—ã</h4>
              <ul className="space-y-2 text-muted-foreground">
                <li><a href="#" className="hover:text-primary transition-colors">–û—Å–Ω–æ–≤—ã –ò–ò</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">ChatGPT</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">Deep Learning</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ö–æ–º–ø–∞–Ω–∏—è</h4>
              <ul className="space-y-2 text-muted-foreground">
                <li><a href="#" className="hover:text-primary transition-colors">–û –Ω–∞—Å</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ë–ª–æ–≥</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ö–∞—Ä—å–µ—Ä–∞</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <ul className="space-y-2 text-muted-foreground">
                <li className="flex items-center gap-2">
                  <Icon name="Mail" size={16} />
                  info@ai-academy.ru
                </li>
                <li className="flex items-center gap-2">
                  <Icon name="Phone" size={16} />
                  +7 (989) 509-18-25
                </li>
              </ul>
            </div>
          </div>
          <div className="border-t border-border/40 mt-8 pt-8 text-center text-muted-foreground">
            <p>¬© 2024 AI Academy. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;